apiVersion: v1
kind: ConfigMap
metadata:
  name: byk-tim-config
data:
  application.properties: |
    security.oauth2.client.client-id={{ .Values.byk.tim.env.security.oauth2.client.clientId }}
    security.oauth2.client.client-secret=${OAUTH2_CLIENT_SECRET}
    security.oauth2.client.scope={{ .Values.byk.tim.env.security.oauth2.client.scope }}
    security.oauth2.client.registered-redirect-uri=https://tim.{{ .Values.domain }}/authenticate
    security.oauth2.client.user-authorization-uri={{ .Values.byk.tim.env.security.oauth2.client.userAuthorizationUri }}
    security.oauth2.client.access-token-uri={{ .Values.byk.tim.env.security.oauth2.client.accessTokenUri }}
    security.oauth2.resource.jwk.key-set-uri={{ .Values.byk.tim.env.security.oauth2.resource.jwk.keySetUri }}
    security.allowlist.jwt={{ .Values.byk.tim.env.security.allowlist.jwt }}

    frontpage.redirect.url=https://admin.{{ .Values.domain }}/chat

    logging.level.root={{ .Values.byk.tim.env.logging.level.root }}
    {{ $dbName := "tim" }}
    spring.datasource.url=jdbc:postgresql://{{ .Values.release_db }}-tim-postgresql:5432/{{ $dbName }}
    spring.datasource.username={{ index .Values "tim-postgresql" "auth" "username" }}
    spring.datasource.password=${DB_PASSWORD}
    spring.datasource.driver-class-name=org.postgresql.Driver
    spring.liquibase.change-log=classpath:master.xml

    spring.profiles.active={{ .Values.byk.tim.env.spring.profiles.active }}

    #legacy integration properties

    #this defines the name of the cookie to write the sessionId into
    #how long the legacy session will last
    legacy-portal-integration.sessionCookieName=PHPSESSID
    # this should match the legacy cookie domain name
    legacy-portal-integration.sessionCookieDomain={{ .Values.byk.tim.env.legacyPortalIntegration.sessionCookieDomain }}
    #is TARA auth module deployed on the same domain as legacy portal?
    # should be set to false only in development mode
    legacy-portal-integration.taraAuthDeployedOnLegacyDomain=true
    #Note! this also affects the JWT timeout periodv
    legacy-portal-integration.sessionTimeoutMinutes=30
    legacy-portal-integration.requestIpHeader=X-FORWARDED-FOR
    legacy-portal-integration.requestIpAttribute=request_ip
    legacy-portal-integration.redirectUrlHeader=Referer
    legacy-portal-integration.redirectUrlAttribute=url_redirect
    # Marker to determine if the user should be redirected back to legacy portal or not
    # Marker is searched in the Referer HTTP header
    legacy-portal-integration.legacyPortalRefererMarker={{ .Values.byk.tim.env.legacyPortalIntegration.legacyPortalRefererMarker }}
    # Location of legacy portal to redirect to, in case legacyPortalRefererMarker gives a positive match
    legacy-portal-integration.legacyUrl={{ .Values.byk.tim.env.legacyPortalIntegration.legacyUrl }}

    # JWT configuration properties
    # location of the private key that will be used for signing JWT tokens


    # to generate the key and the keystore use:
    # keytool -genkeypair -keyalg rsa -keysize 2048 -alias jwtsign -keystore jwtkeystore.jks
    # NB! password for both keystore and alias should be the same
    jwt-integration.signature.key-store={{ .Values.byk.tim.env.jwtIntegration.signature.keyStore }}
    jwt-integration.signature.key-store-password=${KEY_STORE_PASSWORD}
    jwt-integration.signature.keyStoreType=JKS
    jwt-integration.signature.keyAlias=jwtsign
    #Jwt issuer property
    jwt-integration.signature.issuer={{ .Values.byk.tim.env.jwtIntegration.signature.issuer }}
    #Jwt cookie name property
    jwt-integration.signature.cookieName=JWTTOKEN


    userIPHeaderName = x-forwarded-for
    #append a whitespace character at the end of prefix (before newline) if you want it to be separate from main message body
    userIPLoggingPrefix = from IP
    userIPLoggingMDCkey = userIP

    headers.contentSecurityPolicy=upgrade-insecure-requests;default-src 'self' 'unsafe-inline' 'unsafe-eval' https://tim.{{ .Values.domain }} https://admin.{{ .Values.domain }} https://ruuter.{{ .Values.domain }}/v2/public/ https://ruuter.{{ .Values.domain }}/v2/private/ byk-tim byk-ruuter byk-ruuter-private byk-backoffice-login;object-src 'self';script-src 'self' 'unsafe-inline' 'unsafe-eval' https://{{ .Values.domain }} https://admin.{{ .Values.domain }} https://tim.{{ .Values.domain }};connect-src 'self' https://{{ .Values.domain }} https://tim.{{ .Values.domain }} https://admin.{{ .Values.domain }} https://ruuter.{{ .Values.domain }}/v2/public/ https://ruuter.{{ .Values.domain }}/v2/private/;frame-src 'self';media-src 'none'
    cors.allowedOrigins=https://{{ .Values.domain }},https://admin.{{ .Values.domain }},https://ruuter.{{ .Values.domain }}/v2/public/,https://ruuter.{{ .Values.domain }}/v2/private/
    auth.success.redirect.whitelist=https://admin.{{ .Values.domain }}/auth/callback,https://{{ .Values.domain }},https://{{ .Values.domain }}/auth/callback,https://admin.{{ .Values.domain }}

    server.port=8085
